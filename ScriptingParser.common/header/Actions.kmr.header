#### Actions

All action parameters are numeric and get mapped to unit/house types according to default tables used in DAT scripts.

Actions are placed in a form **Actions.ACT_NAME(ACT_PARAMETERS);** like so:
```pascal
    if States.GameTime = 300 then
      Actions.PlayerDefeat(0); //Defeat 1st player
```
Also there is a short name for Actions: just **A**, so you could use it as
```pascal
  A.PlayerDefeat(0); //Defeat 1st player
```

<sub>"-" Means this will not be implemented.</sub>

***

Other scripts functions:
* [Mission Scripts Dynamic Events](https://github.com/reyandme/kam_remake/wiki/MissionScriptsDynamicEvents)
* [Mission Scripts Dynamic States](https://github.com/reyandme/kam_remake/wiki/MissionScriptsDynamicStates)
* [Mission Scripts Dynamic Utils](https://github.com/reyandme/kam_remake/wiki/MissionScriptsDynamicUtils)

Dynamic scripts usefull info:
* [Mission Scripts Dynamic Types](https://github.com/reyandme/kam_remake/wiki/Mission-Script-Dynamic-Types)
* [Mission Scripts Lookups](https://github.com/reyandme/kam_remake/wiki/MissionScriptsLookups)
* [Mission Scripts Custom Console Commands](https://github.com/reyandme/kam_remake/wiki/Mission-Scripts-Custom-Console-Commands)
* [Mission Scripts Advanced Features](https://github.com/reyandme/kam_remake/wiki/MissionScriptDynamic-Features)

