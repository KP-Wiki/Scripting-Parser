#### States

All states parameters are numeric and get mapped to unit/house types according to default tables used in DAT scripts.

States are queried in a form **States.STATE_NAME(STATE_PARAMETERS)** like so:
```pascal
    if States.StatPlayerCount > 5 then
      UnitCnt := States.StatUnitCount(1);
```
Also there is a short name for States: just **S**, so you could use it as
```pascal
  UnitCnt := S.StatUnitCount(1); //Get 1st player units count and store it in variable UnitCnt
```

***

Other scripts functions:
* [Events](https://github.com/reyandme/kam_remake/wiki/Events-(Mission-Script-Dynamic))
* [Actions](https://github.com/reyandme/kam_remake/wiki/Actions-(Mission-Script-Dynamic))
* [Utils](https://github.com/reyandme/kam_remake/wiki/Utils-(Mission-Script-Dynamic))

Dynamic scripts usefull info:
* [Tutorial](https://github.com/reyandme/kam_remake/wiki/Tutorial-(Mission-Script-Dynamic))
* [Types](https://github.com/reyandme/kam_remake/wiki/Types-(Mission-Script-Dynamic))
* [Lookup Tables](https://github.com/reyandme/kam_remake/wiki/Lookup-Tables-(Mission-Script-Dynamic))
* [Advanced Features](https://github.com/reyandme/kam_remake/wiki/Advanced-Features-(Mission-Script-Dynamic))
* [Custom Console Commands](https://github.com/reyandme/kam_remake/wiki/Custom-Console-Commands-(Mission-Script-Dynamic))


***

{LINKS}
<br />

| Ver<br/>sion | State description | Parameters<br/>and types | Returns |
| ------- | ------------------------------------ | -------------- | ------- |
{BODY}