#### Actions

All action parameters are numeric and get mapped to unit/house types according to default tables used in DAT scripts.

Actions are placed in a form **Actions.ACT_NAME(ACT_PARAMETERS);** like so:
```pascal
    if States.GameTime = 300 then
      Actions.PlayerDefeat(0); //Defeat 1st player
```
Also there is a short name for Actions: just **A**, so you could use it as
```pascal
  A.PlayerDefeat(0); //Defeat 1st player
```

<sub>"-" Means this will not be implemented.</sub>

***

Other scripts functions:
* [Events](https://github.com/reyandme/kam_remake/wiki/Events-(Mission-Script-Dynamic))
* [States](https://github.com/reyandme/kam_remake/wiki/States-(Mission-Script-Dynamic))
* [Utils](https://github.com/reyandme/kam_remake/wiki/Utils-(Mission-Script-Dynamic))

Dynamic scripts usefull info:
* [Tutorial](https://github.com/reyandme/kam_remake/wiki/Tutorial-(Mission-Script-Dynamic))
* [Types](https://github.com/reyandme/kam_remake/wiki/Types-(Mission-Script-Dynamic))
* [Lookup Tables](https://github.com/reyandme/kam_remake/wiki/Lookup-Tables-(Mission-Script-Dynamic))
* [Advanced Features](https://github.com/reyandme/kam_remake/wiki/Advanced-Features-(Mission-Script-Dynamic))
* [Custom Console Commands](https://github.com/reyandme/kam_remake/wiki/Custom-Console-Commands-(Mission-Script-Dynamic))


***

{LINKS}
<br />

| Ver<br/>sion | Action description | Parameters<br/>and types | Returns |
| ------- | ------------------------------------ | -------------- | ------- |
{BODY}