#### Events

Events are written in a form **procedure EVENT_NAME(EVENT_PARAMETERS);** like so:
```pascal
    procedure OnHouseBuilt(aHouseID: Integer);
    begin
      // code
    end;
```

#### Custom event handlers
Sometimes we want to make it possible to handle some event in the different procedures. It could be usefull, when we want to make script, which could be easily included into some other script with minimum efforts, as much simple as possible. 

Let's say in our includable script we want to do some stuff, when house is built, then we must have `OnHouseBuild` procedure. But then there could be an error, if main script (where our script is included) will have same `OnHouseBuild` procedure. 
That is why we want to have some other procedure, that will be invoked in our script. That could be archived with custom directive `{$EVENT}`
```pascal
    {$EVENT event_name:event_handler_procedure_name}
```
where
* **event_name** - name of the event, made with `evt` prefix, f.e. `evtHouseBuilt`
* **event_handler_procedure_name** - name of the procedure, which will be invoked on that event

For example:
```pascal
    {$EVENT evtHouseBuilt:MyCustomOnHouseBuilt}

    procedure MyCustomOnHouseBuilt(aHouseID: Integer);
    begin
      // code
    end;
```

When event happens all event handlers are invoked one after another. Default event handler (f.e. `OnHouseBuilt`) is always invoked first. Other custom event handlers invoked in order of declaration by `{$EVENT}` directive.

***

Other scripts functions:
* [Mission Scripts Dynamic Actions](https://github.com/reyandme/kam_remake/wiki/MissionScriptsDynamicActions)
* [Mission Scripts Dynamic States](https://github.com/reyandme/kam_remake/wiki/MissionScriptsDynamicStates)
* [Mission Scripts Dynamic Utils](https://github.com/reyandme/kam_remake/wiki/MissionScriptsDynamicUtils)
<br />

| Ver<br/>sion | Event Description | Parameters<br/>and types |
| ------- | ------------------------------------ | -------------- |
| 6570 | OnBeacon<sub><br/>Occurs when a player places a beacon on the map.</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
| 7000+ | OnFieldBuilt<sub><br/>Occurs when player built a field.</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
| 6220 | OnGroupHungry<sub><br/>Occurs when the player would be shown a message about a group being hungry<br/>(when they first get hungry, then every 4 minutes after that if there are still hungry group members).<br/>Occurs regardless of whether the group has hunger messages enabled or not.</sub> | <sub>**aGroup**: Integer;</sub> |
| 7000+ | OnGroupOrderAttackHouse<sub><br/>Occurs when the group gets order to attack house</sub> | <sub>**aGroup**: Integer; //_attackers group ID_ <br/> **aHouse**: Integer; //_target house ID_</sub> |
| 7000+ | OnGroupOrderAttackUnit<sub><br/>Occurs when the group gets order to attack unit</sub> | <sub>**aGroup**: Integer; //_attackers group ID_ <br/> **aUnit**: Integer; //_target unit ID_</sub> |
| 7000+ | OnGroupOrderLink<sub><br/>Occurs when the group1 gets order to link to group2</sub> | <sub>**aGroup1**: Integer; //_link group ID_ <br/> **aGroup2**: Integer; //_link target group ID_</sub> |
| 7000+ | OnGroupOrderMove<sub><br/>Occurs when the group gets order to move to some point</sub> | <sub>**aGroup**: Integer; //_group ID_ <br/> **aX**: Word; //_Point coordinates_ <br/> **aY**: Word;</sub> |
| 7000+ | OnGroupOrderSplit<sub><br/>Occurs when the group gets order to split</sub> | <sub>**aGroup**: Integer; //_group ID_ <br/> **aNewGroup**: Integer; //_splitted group ID_</sub> |
| 6114 | OnHouseAfterDestroyed<sub><br/>Occurs after a house is destroyed and has been completely removed from the game,<br/>meaning the area it previously occupied can be used.<br/>If you need more information about the house use the OnHouseDestroyed event.</sub> | <sub>**aHouseType**: TKMHouseType; <br/> **aOwner**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
| 5057 | OnHouseBuilt<sub><br/>Occurs when player has built a house.</sub> | <sub>**aHouse**: Integer;</sub> |
| 5882 | OnHouseDamaged<sub><br/>Occurs when a house is damaged by the enemy soldier.<br/>Attacker is -1 the house was damaged some other way, such as from Actions.HouseAddDamage.</sub> | <sub>**aHouse**: Integer; <br/> **aAttacker**: Integer;</sub> |
| 5407 | OnHouseDestroyed<sub><br/>Occurs when a house is destroyed.<br/>If DestroyerIndex is -1 the house was destroyed some other way, such as from Actions.HouseDestroy.<br/>If DestroyerIndex is the same as the house owner (States.HouseOwner), the house was demolished by the player who owns it.<br/>Otherwise it was destroyed by an enemy.<br/>Called just before the house is destroyed so HouseID is usable only during this event, and the area occupied by the house is still unusable.</sub> | <sub>**aHouse**: Integer; <br/> **aDestroyerIndex**: Integer; //_Index of player who destroyed it_</sub> |
| 7000+ | OnHousePlanDigged<sub><br/>Occurs when house plan is digged.</sub> | <sub>**aHouse**: Integer;</sub> |
| 5871 | OnHousePlanPlaced<sub><br/>Occurs when player has placed a house plan.</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word; <br/> **aType**: TKMHouseType;</sub> |
| 6298 | OnHousePlanRemoved<sub><br/>Occurs when player has removed a house plan.</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word; <br/> **aType**: TKMHouseType;</sub> |
| 10750 | OnHouseWareCountChanged<sub><br/>Occurs when ware count is changed in house</sub> | <sub>**aHouse**: Integer; <br/> **aWare**: TKMWareType; <br/> **aCnt**: Word; //_current ware count in house (after change)_ <br/> **aChangeCnt**: Integer; //_ware change count. if aChangeCnt > 0 count increased, if aChangeCnt < 0 count decreased_</sub> |
| 6216 | OnMarketTrade<sub><br/>Occurs when a trade happens in a market (at the moment when resources are exchanged by serfs).</sub> | <sub>**aMarket**: Integer; <br/> **aFrom**: TKMWareType; <br/> **aTo**: TKMWareType;</sub> |
| 5057 | OnMissionStart<sub><br/>Occurs immediately after the mission is loaded.</sub> | <sub></sub> |
| 5964 | OnPlanFieldPlaced<sub><br/>Occurs when player has placed a field plan.</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
| 6301 | OnPlanFieldRemoved<sub><br/>Occurs when player has removed a field plan.</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
| 7000+ | OnPlanRoadDigged<sub><br/>Occurs when road plan is digged.</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
| 5964 | OnPlanRoadPlaced<sub><br/>Occurs when player has placed a road plan.</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
| 6301 | OnPlanRoadRemoved<sub><br/>Occurs when player has removed a road plan.</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
| 7000+ | OnPlanWinefieldDigged<sub><br/>Occurs when winefield is digged</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
| 5964 | OnPlanWinefieldPlaced<sub><br/>Occurs when player has placed a wine field plan.</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
| 6301 | OnPlanWinefieldRemoved<sub><br/>Occurs when player has removed a wine field plan.</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
| 5057 | OnPlayerDefeated<sub><br/>Occurs when certain player has been defeated.<br/>Defeat conditions are checked separately by Player AI.</sub> | <sub>**aPlayer**: Integer;</sub> |
| 5057 | OnPlayerVictory<sub><br/>Occurs when certain player is declared victorious.<br/>Victory conditions are checked separately by Player AI.</sub> | <sub>**aPlayer**: Integer;</sub> |
| 7000+ | OnRoadBuilt<sub><br/>Occurs when player built a road.</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
| 5057 | OnTick<sub><br/>Occurs every game logic update.</sub> | <sub></sub> |
| 6114 | OnUnitAfterDied<sub><br/>Occurs after a unit has died and has been completely removed from the game, meaning the tile it previously occupied can be used.<br/>If you need more information about the unit use the OnUnitDied event.<br/>Note: Because units have a death animation there is a delay of several ticks between OnUnitDied and OnUnitAfterDied.</sub> | <sub>**aUnitType**: TKMUnitType; <br/> **aOwner**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
| 6587 | OnUnitAttacked<sub><br/>Happens when a unit is attacked (shot at by archers or hit in melee).<br/>Attacker is always a warrior (could be archer or melee).<br/>This event will occur very frequently during battles.</sub> | <sub>**aUnit**: Integer; <br/> **aAttacker**: Integer; //_Warrior who attacked the unit_</sub> |
| 5407 | OnUnitDied<sub><br/>Occurs when a unit dies. If KillerIndex is -1 the unit died from another cause such as hunger or Actions.UnitKill.<br/>Called just before the unit is killed so UnitID is usable only during this event,<br/>and the tile occupied by the unit is still taken.</sub> | <sub>**aUnit**: Integer; <br/> **aKillerOwner**: Integer; //_Index of player who killed it_</sub> |
| 5057 | OnUnitTrained<sub><br/>Occurs when player trains a unit.</sub> | <sub>**aUnit**: Integer;</sub> |
| 5884 | OnUnitWounded<sub><br/>Happens when unit is wounded.<br/>Attacker can be a warrior, recruit in tower or unknown (-1).</sub> | <sub>**aUnit**: Integer; <br/> **aAttacker**: Integer; //_Unit who attacked the unit_</sub> |
| 7000+ | OnWareProduced<sub><br/>Occurs when resource is produced for specified house.</sub> | <sub>**aHouse**: Integer; <br/> **aType**: TKMWareType; <br/> **aCount**: Word;</sub> |
| 5057 | OnWarriorEquipped<sub><br/>Occurs when player equips a warrior.</sub> | <sub>**aUnit**: Integer; <br/> **aGroup**: Integer;</sub> |
| 7000+ | OnWarriorWalked<sub><br/>Occurs when warrior walk</sub> | <sub>**aUnit**: Integer; <br/> **aToX**: Integer; <br/> **aToY**: Integer;</sub> |
| 7000+ | OnWinefieldBuilt<sub><br/>Occurs when player built a winefield.</sub> | <sub>**aPlayer**: Integer; <br/> **aX**: Word; <br/> **aY**: Word;</sub> |
